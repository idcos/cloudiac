// Copyright (c) 2015-2022 CloudJ Technology Co., Ltd.

// Code generated by code-gen/desenitize DO NOT EDIT

package desensitize

import (
	// "encoding/json"
	"cloudiac/portal/models"
)

type Vcs struct {
	models.Vcs
}


// 不定义 MarshalJSON() 方法，因为一旦定义了该结构体就无法组合使用了，
// 会覆盖 MarshalJSON() 方法以导致组合的其他字段不输出。 比如定义结构体:
// type VcsWithExt struct {
// 		models.Vcs
//		Ext	string
// }
// 当我们调用 json.Marshal(VcsWithExt{}) 时 Ext 字段不会输出，
// 因为直接调用了 models.Vcs.MarshalJSON() 方法。
// func (v Vcs) MarshalJSON() ([]byte, error) {
// 	return json.Marshal(v.Vcs.Desensitize())
// }
func (v Vcs) Desensitize() Vcs {
	return Vcs{v.Vcs.Desensitize()}
}

func NewVcs(v models.Vcs) Vcs {
	rv := Vcs{v.Desensitize()}
	return rv
}

func NewVcsPtr(v *models.Vcs) *Vcs {
	rv := Vcs{v.Desensitize()}
	return &rv
}

func NewVcsSlice(vs []models.Vcs) []Vcs {
	rvs := make([]Vcs, len(vs))
	for i := 0; i < len(vs); i++ {
		rvs[i] = NewVcs(vs[i])
	}
	return rvs
}

func NewVcsSlicePtr(vs []*models.Vcs) []*Vcs {
	rvs := make([]*Vcs, len(vs))
	for i := 0; i < len(vs); i++ {
		v := NewVcs(*vs[i])
		rvs[i] = &v
	}
	return rvs
}
